[CHANGE LOG]

2022/9/2:
--------
MODULE/MODELS
--------
1) 	Module	: speech_text.SpeechTextDataset
	Path	: speechain/dataset/speech/speech_text.py
	Changes : __getitem__ : added meta info loader for 'feat' (npz) type data

2) 	Module	: speech_speech.SpeechSpeechDataset <NEW>
	Path	: speechain/dataset/speech/speech_speech.py
	Content : Data loader for feature-to-feature (npz2npz) type data. Utilized for vocoder data loader.

3)	Module	: tts.greedy_search <NEW>
	Path	: speechain/infer_func/tts.py
	Content	: Greedy search processor for TTS (txt2feat) inference

4)	Module	: model.tts.TTS <NEW>
	Path	: speechain/model/tts.py
	Content	: Encoder-decoder based TTS model (single speaker/multi speaker)

5)	Module	: model.tts_vocoder.TTSVocoder <NEW>
	Path	: speechain/model/tts_vocoder.py
	Content	: TTS vocoder model (feat2wav)

6)	Module	: model.spkrec.DeepSpeaker <NEW>
	Path	: speechain/model/spkrec.py
	Content	: DeepSpeaker model for speaker recognition from speech feature

7)	Module	: module.custom.cbhg1d <NEW>
	Path	: speechain/module/custom/cbhg1d.py
	Content	: CBHG network for griffin-lim-based vocoder

8)	Module	: module.custom.deepspeaker <NEW>
	Path	: speechain/module/custom/deepspeaker.py
	Content	: Deepspeaker network 

9)	Module	: module.custom.vocoder.TacotronV1Inverter <NEW>
	Path	: speechain/module/custom/vocoder.py
	Content	: Vocoder module based on Tacotron (CBHG + FFNs)

10)	Module	: module.decoder.tts.TTSDecoderSingleSpeaker <NEW>
	Path	: speechain/module/decoder/tts.py
	Content	: TTS autoregressive decoder module (single speaker)

11)	Module	: module.decoder.tts.TTSDecoderMultiSpeaker <NEW>
	Path	: speechain/module/decoder/tts.py
	Content	: TTS autoregressive decoder module (multi speaker)


12)	Module	: module.decoder.tts.TTSEncoder <NEW>
	Path	: speechain/module/encoder/tts.py
	Content	: TTS encoder module (single/multi speaker)

13)	Module	: module.postnet.linear.LinearPostnet <NEW>
	Path	: speechain/module/postnet/linear.py
	Content	: Deep fully connected network (feed forward)

14)	Module	: module.postnet.linear.LinearPostnet <NEW>
	Path	: speechain/module/postnet/linear.py
	Content	: Deep fully connected network (feed forward)

15)	Module	: module.postnet.linearResidual.LinearResidualPostnet <NEW>
	Path	: speechain/module/postnet/linearResidual.py
	Content	: Deep fully connected network (feed forward) with residual connection

16)	Module	: module.prenet.conv1d <NEW>
	Path	: speechain/module/prenet/conv1d.py
	Content	: Conv1d network

17)	Module	: module.prenet.embed <NEW>
	Path	: speechain/module/prenet/embed.py
	Content	: Embedding network

18)	Module	: module.prenet.linear <NEW>
	Path	: speechain/module/prenet/linear.py
	Content	: Linear/FFN network 


--------
DATASETS
--------
1) 	Dataset : speech_spk.wsj
	Path 	: datasets/speech_spk/wsj
	Content	: materials for speaker recognition model training based on WSJ dataset. Only contain text-based files (transcriptions, speaker id, feat.scp) that used in previous generation of this toolkit.

2) 	Dataset : speech_text.wsj
	Path 	: datasets/speech_text/wsj
	Content	: materials for TTS/ASR model training based on WSJ dataset. Only contain text-based files (transcriptions, speaker id, feat.scp) that used in previous generation of this toolkit.

---------
RECIPES
---------
1) 	Recipe 	: recipes.tts.ljspeech.transformer
	Path 	: recipes/tts/ljspeech/transformer
	Content	: materials for single-speaker TTS core (text-to-mel) training based on LJ speech dataset. 

2) 	Recipe 	: recipes.tts.ljspeech.vocoder
	Path 	: recipes/tts/ljspeech/vocoder
	Content	: materials for TTS vocoder (mel-to-waveform) training based on LJ speech dataset. 

1) 	Recipe 	: recipes.tts.wsj.transformer
	Path 	: recipes/tts/wsj/transformer
	Content	: materials for multi-speaker TTS core (text-to-mel) training based on WSJ dataset. 

1) 	Recipe 	: recipes.tts.wsj.vocoder
	Path 	: recipes/tts/wsj/vocoder
	Content	: materials for TTS inverter (mel-to-waveform) training based on WSJ dataset. 